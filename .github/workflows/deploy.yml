name: Deploy ConnectX

on:
  workflow_run:
    workflows: [ "CodeQL Advanced" ]
    types:
      - completed
  workflow_dispatch:

jobs:
  publish:
    if: github.event.workflow_run.conclusion == 'success'
    strategy:
      matrix:
        configuration: [Relay, Server]
    runs-on: ubuntu-latest  
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Init git submodule
      run: |
        git submodule init
        git submodule update
    
    - name: Restore the application
      run: dotnet restore
      
    - name: Build the application
      run: |
        cd ./ConnectX.$Configuration
        dotnet publish -f net9.0 -c Release -r linux-x64 --self-contained true /p:PublishSingleFile=true
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.configuration }}-Release-linux-x64 
        path: ./ConnectX.${{ matrix.configuration }}/bin/Release/net9.0/linux-x64/publish/
    
  deploy:
    needs: publish
    strategy:
      matrix:
        service: [Relay, Server]                # 服务类型
        server: [hangzhou,ningbo]     # 多服务器配置
    runs-on: ubuntu-latest
    steps:
    - name: Filter Deployment by Server and Service
      if: (matrix.service == 'Relay' && (matrix.server == 'hangzhou' || matrix.server == 'ningbo')) || 
          (matrix.service == 'Server' && (matrix.server == 'hangzhou' || matrix.server == 'ningbo'))
      run: echo "Deploying ${{ matrix.service }} to ${{ matrix.server }}"

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.service }}-Release-linux-x64
        path: ./deploy-package
        
    - name: Remove excluded files
      run: |
        find ./deploy-package -name "appsettings*.json" -delete

    - name: Stop remote service
      uses: appleboy/ssh-action@v1
      with: 
        host: ${{ secrets[format('{0}_{1}_SSH_HOST', matrix.service | toUpper, matrix.server | toUpper)] }}
        username: ${{ secrets[format('{0}_{1}_SSH_USERNAME', matrix.service | toUpper, matrix.server | toUpper)] }}
        password: ${{ secrets[format('{0}_{1}_SSH_KEY', matrix.service | toUpper, matrix.server | toUpper)] }}
        script: sudo supervisorctl stop connectx-${{ matrix.service }}-service
          
    - name: Deploy via SFTP
      uses: wlixcc/SFTP-Deploy-Action@v1.2.5
      with:
        server: ${{ secrets[format('{0}_{1}_SSH_HOST', matrix.service | toUpper, matrix.server | toUpper)] }}
        username: ${{ secrets[format('{0}_{1}_SSH_USERNAME', matrix.service | toUpper, matrix.server | toUpper)] }}
        password: ${{ secrets[format('{0}_{1}_SSH_KEY', matrix.service | toUpper, matrix.server | toUpper)] }}
        local_path: './deploy-package/*'
        remote_path: '/www/connectx/${{ matrix.service }}'
        
    - name: Start remote service
      uses: appleboy/ssh-action@v1
      with: 
        host: ${{ secrets[format('{0}_{1}_SSH_HOST', matrix.service | toUpper, matrix.server | toUpper)] }}
        username: ${{ secrets[format('{0}_{1}_SSH_USERNAME', matrix.service | toUpper, matrix.server | toUpper)] }}
        password: ${{ secrets[format('{0}_{1}_SSH_KEY', matrix.service | toUpper, matrix.server | toUpper)] }}
        script: sudo supervisorctl start connectx-${{ matrix.service }}-service
